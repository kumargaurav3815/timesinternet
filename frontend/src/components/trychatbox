/** @format */

import React, { useState, useEffect, useRef } from "react";
import axios from "axios";

const ChatBot = () => {
  const [messages, setMessages] = useState([
    {
      from: "bot",
      text: "Hi! I can help you find the best credit card. What's your monthly income?",
    },
  ]);
  const [input, setInput] = useState("");
  const [sessionId] = useState(() => crypto.randomUUID());
  const messagesEndRef = useRef(null);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  const sendMessage = async () => {
    if (!input.trim()) return;

    const userMessage = { from: "user", text: input };
    setMessages((prev) => [...prev, userMessage]);
    setInput("");

    try {
      const res = await axios.post("http://localhost:8000/ask", {
        message: input,
        session_id: sessionId,
      });

      const botText = res.data.response;

      // Check if recommendations are included in the response
      if (botText.includes("Top Recommended Cards:")) {
        const parts = botText.split("\n");
        const botIntro = parts
          .slice(
            0,
            parts.findIndex((p) => p.includes("Top Recommended Cards:")) + 1
          )
          .join("\n");
        const cards = parts
          .filter((line) => line.startsWith("âœ…"))
          .map((line) => line.replace("âœ…", "").trim());

        setMessages((prev) => [
          ...prev,
          { from: "bot", text: botIntro },
          ...cards.map((card) => ({ from: "bot", text: `ðŸ§¾ ${card}` })),
        ]);
      } else {
        setMessages((prev) => [...prev, { from: "bot", text: botText }]);
      }
    } catch (err) {
      console.error("Chat API error:", err);
      setMessages((prev) => [
        ...prev,
        { from: "bot", text: "Oops! Something went wrong while chatting." },
      ]);
    }
  };

  return (
    <div className="w-full max-w-2xl mx-auto mt-8 p-4 bg-white shadow rounded">
      <h2 className="text-xl font-bold text-blue-700 mb-4">
        ðŸ’¬ Credit Card Chat Assistant
      </h2>

      <div className="h-96 overflow-y-auto border border-gray-300 rounded p-4 space-y-2 bg-gray-50 flex flex-col">
        {messages.map((msg, idx) => (
          <div
            key={idx}
            className={`text-sm p-2 rounded max-w-xs whitespace-pre-wrap ${
              msg.from === "bot"
                ? "bg-blue-100 text-blue-800 self-start"
                : "bg-green-100 text-green-800 self-end"
            }`}>
            {msg.text}
          </div>
        ))}
        <div ref={messagesEndRef} />
      </div>

      <div className="flex mt-4 gap-2">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyDown={(e) => e.key === "Enter" && sendMessage()}
          placeholder="Type your message..."
          className="flex-grow border border-gray-300 rounded px-3 py-2"
        />
        <button
          onClick={sendMessage}
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
          Send
        </button>
      </div>
    </div>
  );
};

export default ChatBot;
